<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <style>
        /* Estilos CSS para el chat */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        #chat-container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }

        #chat-messages {
            height: 300px;
            overflow-y: scroll;
            border: 1px solid #ccc;
            padding: 10px;
        }

        .message {
            margin-bottom: 10px;
        }

        #chat-form {
            display: flex;
            flex-direction: column;
        }

        #user-input,
        #message-input {
            margin-bottom: 10px;
            padding: 5px;
        }

        button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div id="chat-container">
        <div id="chat-messages">
            {{#each messages}}
                <div class="message">
                    <strong>{{this.user}}:</strong> {{this.message}}
                </div>
            {{/each}}
        </div>
        <form id="chat-form">
            <input type="text" id="user-input" placeholder="Nombre de usuario" required>
            <input type="text" id="message-input" placeholder="Escribe tu mensaje" required>
            <button type="submit">Enviar</button>
        </form>
    </div>

    <script type="module">
        import io from '/socket.io/socket.io.js'; 

        const socket = io(); // Conecta con el servidor WebSocket

        // Manejar el envío del formulario
        document.getElementById('chat-form').addEventListener('submit', (event) => {
            event.preventDefault();
            const user = document.getElementById('user-input').value;
            const message = document.getElementById('message-input').value;

            if (user && message) {
                // Enviar el mensaje al servidor a través de WebSocket
                socket.emit('chatMessage', { user, message });

                // Limpiar el campo de entrada del mensaje
                document.getElementById('message-input').value = '';
            }
        });

        // Manejar la recepción de mensajes desde el servidor
        socket.on('message', (data) => {
            const { user, message } = data;
            addMessage(user, message);
        });

        // Función para agregar un mensaje al chat
        function addMessage(user, message) {
            const messageContainer = document.getElementById('chat-messages');
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            messageElement.innerHTML = `<strong>${user}:</strong> ${message}`;
            messageContainer.appendChild(messageElement);

            // Desplazarse hacia abajo para mostrar el mensaje más reciente
            messageContainer.scrollTop = messageContainer.scrollHeight;
        }
    </script>
</body>
</html>

